// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: account.proto

/*
	Package account is a generated protocol buffer package.

	It is generated from these files:
		account.proto

	It has these top-level messages:
		Account
		CreateAccountRequest
*/
package account

import (
	fmt "fmt"

	proto "github.com/gogo/protobuf/proto"

	math "math"

	_ "v2.staffjoy.com/protobuf/google/api"

	_ "github.com/golang/protobuf/ptypes/timestamp"

	_ "github.com/gogo/protobuf/gogoproto"

	time "time"

	context "golang.org/x/net/context"

	grpc "google.golang.org/grpc"

	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"

	io "io"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Account struct {
	Uuid               string    `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty" db:"uuid"`
	Name               string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" db:"name"`
	Email              string    `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty" db:"email"`
	ConfirmedAndActive bool      `protobuf:"varint,4,opt,name=confirmed_and_active,json=confirmedAndActive,proto3" json:"confirmed_and_active,omitempty" db:"confirmed_and_active"`
	MemberSince        time.Time `protobuf:"bytes,5,opt,name=member_since,json=memberSince,stdtime" json:"member_since" db:"member_since"`
	Support            bool      `protobuf:"varint,6,opt,name=support,proto3" json:"support,omitempty" db:"support"`
	Phonenumber        string    `protobuf:"bytes,7,opt,name=phonenumber,proto3" json:"phonenumber,omitempty" db:"phonenumber"`
	PhotoUrl           string    `protobuf:"bytes,8,opt,name=photo_url,json=photoUrl,proto3" json:"photo_url,omitempty" db:"photo_url"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptorAccount, []int{0} }

func (m *Account) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetConfirmedAndActive() bool {
	if m != nil {
		return m.ConfirmedAndActive
	}
	return false
}

func (m *Account) GetMemberSince() time.Time {
	if m != nil {
		return m.MemberSince
	}
	return time.Time{}
}

func (m *Account) GetSupport() bool {
	if m != nil {
		return m.Support
	}
	return false
}

func (m *Account) GetPhonenumber() string {
	if m != nil {
		return m.Phonenumber
	}
	return ""
}

func (m *Account) GetPhotoUrl() string {
	if m != nil {
		return m.PhotoUrl
	}
	return ""
}

type CreateAccountRequest struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Phonenumber string `protobuf:"bytes,3,opt,name=phonenumber,proto3" json:"phonenumber,omitempty"`
}

func (m *CreateAccountRequest) Reset()                    { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()               {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorAccount, []int{1} }

func (m *CreateAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateAccountRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CreateAccountRequest) GetPhonenumber() string {
	if m != nil {
		return m.Phonenumber
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "account.Account")
	proto.RegisterType((*CreateAccountRequest)(nil), "account.CreateAccountRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountService service

type AccountServiceClient interface {
	Create(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) Create(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := grpc.Invoke(ctx, "/account.AccountService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountService service

type AccountServiceServer interface {
	Create(context.Context, *CreateAccountRequest) (*Account, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/account.AccountService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Create(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "account.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _AccountService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}

func (m *Account) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Account) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Uuid) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAccount(dAtA, i, uint64(len(m.Uuid)))
		i += copy(dAtA[i:], m.Uuid)
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintAccount(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintAccount(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if m.ConfirmedAndActive {
		dAtA[i] = 0x20
		i++
		if m.ConfirmedAndActive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	dAtA[i] = 0x2a
	i++
	i = encodeVarintAccount(dAtA, i, uint64(github_com_gogo_protobuf_types.SizeOfStdTime(m.MemberSince)))
	n1, err := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.MemberSince, dAtA[i:])
	if err != nil {
		return 0, err
	}
	i += n1
	if m.Support {
		dAtA[i] = 0x30
		i++
		if m.Support {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if len(m.Phonenumber) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintAccount(dAtA, i, uint64(len(m.Phonenumber)))
		i += copy(dAtA[i:], m.Phonenumber)
	}
	if len(m.PhotoUrl) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintAccount(dAtA, i, uint64(len(m.PhotoUrl)))
		i += copy(dAtA[i:], m.PhotoUrl)
	}
	return i, nil
}

func (m *CreateAccountRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateAccountRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintAccount(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Email) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintAccount(dAtA, i, uint64(len(m.Email)))
		i += copy(dAtA[i:], m.Email)
	}
	if len(m.Phonenumber) > 0 {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintAccount(dAtA, i, uint64(len(m.Phonenumber)))
		i += copy(dAtA[i:], m.Phonenumber)
	}
	return i, nil
}

func encodeVarintAccount(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *Account) Size() (n int) {
	var l int
	_ = l
	l = len(m.Uuid)
	if l > 0 {
		n += 1 + l + sovAccount(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovAccount(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovAccount(uint64(l))
	}
	if m.ConfirmedAndActive {
		n += 2
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.MemberSince)
	n += 1 + l + sovAccount(uint64(l))
	if m.Support {
		n += 2
	}
	l = len(m.Phonenumber)
	if l > 0 {
		n += 1 + l + sovAccount(uint64(l))
	}
	l = len(m.PhotoUrl)
	if l > 0 {
		n += 1 + l + sovAccount(uint64(l))
	}
	return n
}

func (m *CreateAccountRequest) Size() (n int) {
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovAccount(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovAccount(uint64(l))
	}
	l = len(m.Phonenumber)
	if l > 0 {
		n += 1 + l + sovAccount(uint64(l))
	}
	return n
}

func sovAccount(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozAccount(x uint64) (n int) {
	return sovAccount(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Account) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAccount
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Account: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Account: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccount
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccount
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccount
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConfirmedAndActive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConfirmedAndActive = bool(v != 0)
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemberSince", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthAccount
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.MemberSince, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Support", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Support = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phonenumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccount
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phonenumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhotoUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccount
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhotoUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAccount(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAccount
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateAccountRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowAccount
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateAccountRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateAccountRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccount
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccount
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Phonenumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthAccount
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Phonenumber = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipAccount(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthAccount
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipAccount(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowAccount
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowAccount
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthAccount
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowAccount
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipAccount(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthAccount = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowAccount   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("account.proto", fileDescriptorAccount) }

var fileDescriptorAccount = []byte{
	// 500 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xdf, 0x8a, 0xd3, 0x40,
	0x14, 0xc6, 0xcd, 0xfe, 0xe9, 0x9f, 0x69, 0xb7, 0x74, 0x87, 0xc2, 0xc6, 0x62, 0x3b, 0x75, 0x50,
	0x28, 0x0b, 0x26, 0x58, 0xc1, 0x8b, 0xbd, 0x6b, 0x7d, 0x00, 0x61, 0x56, 0x6f, 0x44, 0x28, 0x93,
	0x64, 0xda, 0x8e, 0x34, 0x33, 0x31, 0x99, 0x14, 0xbc, 0xf5, 0x09, 0x04, 0x9f, 0xc6, 0x37, 0xd8,
	0x4b, 0xc1, 0xfb, 0x28, 0xc5, 0x27, 0xc8, 0x13, 0xc8, 0x4c, 0x26, 0x6b, 0x0b, 0x7b, 0x97, 0xf3,
	0x7d, 0xbf, 0x93, 0x73, 0x38, 0xdf, 0x80, 0x0b, 0x1a, 0x86, 0x32, 0x17, 0xca, 0x4b, 0x52, 0xa9,
	0x24, 0x6c, 0xda, 0x72, 0xf8, 0x64, 0x2d, 0xe5, 0x7a, 0xcb, 0x7c, 0x9a, 0x70, 0x9f, 0x0a, 0x21,
	0x15, 0x55, 0x5c, 0x8a, 0xac, 0xc2, 0x86, 0xc8, 0xba, 0xa6, 0x0a, 0xf2, 0x95, 0xaf, 0x78, 0xcc,
	0x32, 0x45, 0xe3, 0xc4, 0x02, 0x2f, 0xd6, 0x5c, 0x6d, 0xf2, 0xc0, 0x0b, 0x65, 0xec, 0xaf, 0xe5,
	0x5a, 0xfe, 0x27, 0x75, 0x65, 0x0a, 0xf3, 0x55, 0xe1, 0xf8, 0xc7, 0x29, 0x68, 0xce, 0xab, 0xc9,
	0xf0, 0x29, 0x38, 0xcb, 0x73, 0x1e, 0xb9, 0xce, 0xc4, 0x99, 0xb6, 0x17, 0x17, 0x65, 0x81, 0xda,
	0x51, 0x70, 0x83, 0xb5, 0x86, 0x89, 0xb1, 0x34, 0x22, 0x68, 0xcc, 0xdc, 0x93, 0x63, 0x44, 0x6b,
	0x98, 0x18, 0x0b, 0x3e, 0x03, 0xe7, 0x2c, 0xa6, 0x7c, 0xeb, 0x9e, 0x1a, 0xa6, 0x57, 0x16, 0x08,
	0x68, 0xc6, 0x88, 0x98, 0x54, 0x26, 0x7c, 0x0b, 0x06, 0xa1, 0x14, 0x2b, 0x9e, 0xc6, 0x2c, 0x5a,
	0x52, 0x11, 0x2d, 0x69, 0xa8, 0xf8, 0x8e, 0xb9, 0x67, 0x13, 0x67, 0xda, 0x5a, 0x8c, 0xca, 0x02,
	0x3d, 0xd6, 0x4d, 0x0f, 0x31, 0x98, 0xc0, 0x7b, 0x79, 0x2e, 0xa2, 0xb9, 0x11, 0xe1, 0x47, 0xd0,
	0x8d, 0x59, 0x1c, 0xb0, 0x74, 0x99, 0x71, 0x11, 0x32, 0xf7, 0x7c, 0xe2, 0x4c, 0x3b, 0xb3, 0xa1,
	0x57, 0xdd, 0xcb, 0xab, 0xaf, 0xe0, 0xbd, 0xab, 0xef, 0xb5, 0x18, 0xdd, 0x15, 0xe8, 0x51, 0x59,
	0xa0, 0x4b, 0x3d, 0xe8, 0xb0, 0x17, 0x7f, 0xfb, 0x8d, 0x1c, 0xd2, 0xa9, 0xa4, 0x5b, 0xad, 0xc0,
	0x6b, 0xd0, 0xcc, 0xf2, 0x24, 0x91, 0xa9, 0x72, 0x1b, 0x66, 0xc3, 0x7e, 0x59, 0xa0, 0xae, 0x6e,
	0xb4, 0x32, 0x26, 0x35, 0x00, 0x5f, 0x83, 0x4e, 0xb2, 0x91, 0x82, 0x89, 0x5c, 0xf7, 0xbb, 0x4d,
	0x73, 0x86, 0x41, 0x59, 0xa0, 0xbe, 0xe6, 0x0f, 0x2c, 0x4c, 0x0e, 0x41, 0xe8, 0x83, 0x76, 0xb2,
	0x91, 0x4a, 0x2e, 0xf3, 0x74, 0xeb, 0xb6, 0x4c, 0x17, 0x2c, 0x0b, 0xd4, 0xb3, 0x5d, 0x95, 0x81,
	0x49, 0xcb, 0x7c, 0xbf, 0x4f, 0xb7, 0x38, 0x00, 0x83, 0x37, 0x29, 0xa3, 0x8a, 0xd9, 0x00, 0x09,
	0xfb, 0x9c, 0xb3, 0x4c, 0x41, 0x68, 0x43, 0x32, 0x39, 0xda, 0x54, 0x06, 0x75, 0x2a, 0x26, 0xb9,
	0x3a, 0x85, 0xc9, 0xf1, 0xaa, 0x26, 0xb1, 0xa3, 0xa5, 0x66, 0x11, 0xe8, 0xd9, 0xbf, 0xdf, 0xb2,
	0x74, 0xc7, 0x43, 0x06, 0x09, 0x68, 0x54, 0x53, 0xe1, 0xc8, 0xab, 0x9f, 0xf0, 0x43, 0x6b, 0x0c,
	0xfb, 0xf7, 0xb6, 0x35, 0xf0, 0xd5, 0xd7, 0x5f, 0x7f, 0xbf, 0x9f, 0x5c, 0xe2, 0xae, 0xbf, 0x7b,
	0xe9, 0x5b, 0x33, 0xbb, 0x71, 0xae, 0x17, 0xcf, 0xef, 0xf6, 0x63, 0xe7, 0xe7, 0x7e, 0xec, 0xfc,
	0xd9, 0x8f, 0x9d, 0x0f, 0x57, 0xbb, 0x99, 0x97, 0x29, 0xba, 0x5a, 0x7d, 0x92, 0x5f, 0xcc, 0x3b,
	0xb6, 0x68, 0xd0, 0x30, 0x29, 0xbe, 0xfa, 0x17, 0x00, 0x00, 0xff, 0xff, 0x28, 0x99, 0x45, 0x61,
	0x3b, 0x03, 0x00, 0x00,
}
